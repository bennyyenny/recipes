{"ast":null,"code":"var _jsxFileName = \"/Users/jennynguyen/Desktop/recipe-app/frontend/src/pages/Recipe.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport DisplayRecipe from '../components/DisplayRecipe';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recipe = () => {\n  _s();\n  const {\n    recipeId\n  } = useParams();\n  const [recipe, setRecipe] = useState(null);\n  useEffect(() => {\n    const fetchRecipe = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5001/recipes/${recipeId}`);\n        setRecipe(response.data);\n      } catch (error) {\n        console.error('Error fetching recipe:', error);\n      }\n    };\n    fetchRecipe();\n  }, [recipeId]);\n  if (!recipe) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading recipe...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipe-display\",\n    children: /*#__PURE__*/_jsxDEV(DisplayRecipe, {\n      recipe: recipe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Recipe, \"BnsFFqDme4S3pBFLz+sYsp2QNAA=\", false, function () {\n  return [useParams];\n});\n_c = Recipe;\nexport default Recipe;\nvar _c;\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","DisplayRecipe","jsxDEV","_jsxDEV","Recipe","_s","recipeId","recipe","setRecipe","fetchRecipe","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/jennynguyen/Desktop/recipe-app/frontend/src/pages/Recipe.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport DisplayRecipe from '../components/DisplayRecipe';\n\nconst Recipe = () => {\n    const { recipeId } = useParams();\n    const [recipe, setRecipe] = useState(null);\n\n    useEffect(() => {\n        const fetchRecipe = async () => {\n            try {\n                const response = await axios.get(`http://localhost:5001/recipes/${recipeId}`);\n                setRecipe(response.data);\n            } catch (error) {\n                console.error('Error fetching recipe:', error);\n            }\n        };\n\n        fetchRecipe();\n    }, [recipeId]);\n\n    if (!recipe) {\n        return <p>Loading recipe...</p>;\n    }\n\n    return (\n        <div className=\"recipe-display\">\n            <DisplayRecipe recipe={recipe} />\n        </div>\n    );\n};\n\nexport default Recipe;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,aAAa,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM;IAAEC;EAAS,CAAC,GAAGN,SAAS,CAAC,CAAC;EAChC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,iCAAiCL,QAAQ,EAAE,CAAC;QAC7EE,SAAS,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAClD;IACJ,CAAC;IAEDJ,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EAEd,IAAI,CAACC,MAAM,EAAE;IACT,oBAAOJ,OAAA;MAAAY,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACnC;EAEA,oBACIhB,OAAA;IAAKiB,SAAS,EAAC,gBAAgB;IAAAL,QAAA,eAC3BZ,OAAA,CAACF,aAAa;MAACM,MAAM,EAAEA;IAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEd,CAAC;AAACd,EAAA,CA1BID,MAAM;EAAA,QACaJ,SAAS;AAAA;AAAAqB,EAAA,GAD5BjB,MAAM;AA4BZ,eAAeA,MAAM;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}